
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CLOSE_BRACKET CLOSE_PARENTHESIS COLON COMMA DIVIDE ELSE EQUAL FLOAT FLOAT_ID FUNCTION_ID GREATER_THAN GREATER_THAN_EQUAL ID IF INT INT_ID LESS_THAN LESS_THAN_EQUAL MINUS MULTIPLY NOT_EQUAL OPEN_BRACKET OPEN_PARENTHESIS PLUS PRINT PROGRAM_ID SEMICOLON STRING VAR_ID WORD\n    program : PROGRAM_ID ID SEMICOLON block\n    \n    program : PROGRAM_ID ID SEMICOLON vars functions block\n    \n    block : OPEN_BRACKET block_statue CLOSE_BRACKET\n    \n    block_statue : statue block_statue\n                 | empty\n    \n    statue : assign\n           | condition\n           | write\n    \n    vars : VAR_ID varstype vars2\n    vars2 : varstype vars2\n          | empty\n    varstype : ID varstype2 COLON type SEMICOLON\n    varstype2 : COMMA ID varstype2\n              | empty\n    \n    functions : FUNCTION_ID type ID OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS block\n              | empty\n    \n    parameters : type ID parameters2 \n               | empty\n    parameters2 : COMMA type ID parameters2\n                | empty \n    \n    assign : ID EQUAL expression SEMICOLON\n    \n    exp : term plus_minus\n    \n    term : factor multiply_divide\n    \n    factor : OPEN_PARENTHESIS expression CLOSE_PARENTHESIS\n           | plus_minus_factor var_cte\n    \n    var_cte : ID \n            | INT \n            | FLOAT\n    \n    plus_minus_factor : PLUS \n                      | MINUS \n                      | empty\n    \n    multiply_divide : MULTIPLY term \n                    | DIVIDE term \n                    | empty\n    \n    plus_minus : PLUS exp \n               | MINUS exp \n               | empty\n    \n    condition : IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block else SEMICOLON\n    \n    else : ELSE block \n         | empty\n    \n    expression : exp expression_def\n    expression_def : GREATER_THAN exp \n               | LESS_THAN exp \n               | NOT_EQUAL exp \n               | empty\n    \n    write : PRINT OPEN_PARENTHESIS write_exp CLOSE_PARENTHESIS SEMICOLON\n    \n    write_exp : expression\n              | expression COMMA write_exp\n              | STRING\n              | STRING COMMA write_exp\n    \n    type : INT_ID\n         | FLOAT_ID\n    empty :'
    
_lr_action_items = {'PROGRAM_ID':([0,],[2,]),'$end':([1,5,23,27,],[0,-1,-2,-3,]),'ID':([2,7,8,13,15,16,17,21,24,25,26,29,30,31,32,36,43,44,45,46,47,56,58,59,60,63,64,67,68,77,78,81,93,96,106,108,],[3,18,22,18,-6,-7,-8,22,38,-51,-52,-53,-53,-53,22,54,-53,72,-29,-30,-31,-21,-53,-53,-53,-53,-53,-53,-53,-53,-53,97,-46,-12,-38,109,]),'SEMICOLON':([3,25,26,27,39,40,41,42,57,61,62,65,66,69,71,72,73,74,76,79,84,85,86,87,88,89,90,91,92,99,101,107,],[4,-51,-52,-3,56,-53,-53,-53,-41,-45,-22,-37,-23,-34,-25,-26,-27,-28,93,96,-42,-43,-44,-35,-36,-32,-33,-24,-53,106,-40,-39,]),'OPEN_BRACKET':([4,6,9,11,21,27,32,33,34,52,75,96,98,100,105,],[7,-53,7,-16,-53,-3,-53,-9,-11,-10,7,-12,7,7,-15,]),'VAR_ID':([4,],[8,]),'FUNCTION_ID':([6,21,32,33,34,52,96,],[10,-53,-53,-9,-11,-10,-12,]),'CLOSE_BRACKET':([7,12,13,14,15,16,17,28,56,93,106,],[-53,27,-53,-5,-6,-7,-8,-4,-21,-46,-38,]),'IF':([7,13,15,16,17,56,93,106,],[19,19,-6,-7,-8,-21,-46,-38,]),'PRINT':([7,13,15,16,17,56,93,106,],[20,20,-6,-7,-8,-21,-46,-38,]),'INT_ID':([10,53,55,103,],[25,25,25,25,]),'FLOAT_ID':([10,53,55,103,],[26,26,26,26,]),'EQUAL':([18,],[29,]),'OPEN_PARENTHESIS':([19,20,29,30,31,38,43,58,59,60,63,64,67,68,77,78,],[30,31,43,43,43,55,43,43,43,43,43,43,43,43,43,43,]),'COMMA':([22,40,41,42,50,51,54,57,61,62,65,66,69,71,72,73,74,84,85,86,87,88,89,90,91,97,109,],[36,-53,-53,-53,77,78,36,-41,-45,-22,-37,-23,-34,-25,-26,-27,-28,-42,-43,-44,-35,-36,-32,-33,-24,103,103,]),'COLON':([22,35,37,54,80,],[-53,53,-14,-53,-13,]),'ELSE':([27,92,],[-3,100,]),'PLUS':([29,30,31,41,42,43,58,59,60,63,64,66,67,68,69,71,72,73,74,77,78,89,90,91,],[45,45,45,63,-53,45,45,45,45,45,45,-23,45,45,-34,-25,-26,-27,-28,45,45,-32,-33,-24,]),'MINUS':([29,30,31,41,42,43,58,59,60,63,64,66,67,68,69,71,72,73,74,77,78,89,90,91,],[46,46,46,64,-53,46,46,46,46,46,46,-23,46,46,-34,-25,-26,-27,-28,46,46,-32,-33,-24,]),'INT':([29,30,31,43,44,45,46,47,58,59,60,63,64,67,68,77,78,],[-53,-53,-53,-53,73,-29,-30,-31,-53,-53,-53,-53,-53,-53,-53,-53,-53,]),'FLOAT':([29,30,31,43,44,45,46,47,58,59,60,63,64,67,68,77,78,],[-53,-53,-53,-53,74,-29,-30,-31,-53,-53,-53,-53,-53,-53,-53,-53,-53,]),'STRING':([31,77,78,],[51,51,51,]),'GREATER_THAN':([40,41,42,62,65,66,69,71,72,73,74,87,88,89,90,91,],[58,-53,-53,-22,-37,-23,-34,-25,-26,-27,-28,-35,-36,-32,-33,-24,]),'LESS_THAN':([40,41,42,62,65,66,69,71,72,73,74,87,88,89,90,91,],[59,-53,-53,-22,-37,-23,-34,-25,-26,-27,-28,-35,-36,-32,-33,-24,]),'NOT_EQUAL':([40,41,42,62,65,66,69,71,72,73,74,87,88,89,90,91,],[60,-53,-53,-22,-37,-23,-34,-25,-26,-27,-28,-35,-36,-32,-33,-24,]),'CLOSE_PARENTHESIS':([40,41,42,48,49,50,51,55,57,61,62,65,66,69,70,71,72,73,74,82,83,84,85,86,87,88,89,90,91,94,95,97,102,104,109,110,],[-53,-53,-53,75,76,-47,-49,-53,-41,-45,-22,-37,-23,-34,91,-25,-26,-27,-28,98,-18,-42,-43,-44,-35,-36,-32,-33,-24,-48,-50,-53,-17,-20,-53,-19,]),'MULTIPLY':([42,71,72,73,74,91,],[67,-25,-26,-27,-28,-24,]),'DIVIDE':([42,71,72,73,74,91,],[68,-25,-26,-27,-28,-24,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block':([4,9,75,98,100,],[5,23,92,105,107,]),'vars':([4,],[6,]),'functions':([6,],[9,]),'empty':([6,7,13,21,22,29,30,31,32,40,41,42,43,54,55,58,59,60,63,64,67,68,77,78,92,97,109,],[11,14,14,34,37,47,47,47,34,61,65,69,47,37,83,47,47,47,47,47,47,47,47,47,101,104,104,]),'block_statue':([7,13,],[12,28,]),'statue':([7,13,],[13,13,]),'assign':([7,13,],[15,15,]),'condition':([7,13,],[16,16,]),'write':([7,13,],[17,17,]),'varstype':([8,21,32,],[21,32,32,]),'type':([10,53,55,103,],[24,79,81,108,]),'vars2':([21,32,],[33,52,]),'varstype2':([22,54,],[35,80,]),'expression':([29,30,31,43,77,78,],[39,48,50,70,50,50,]),'exp':([29,30,31,43,58,59,60,63,64,77,78,],[40,40,40,40,84,85,86,87,88,40,40,]),'term':([29,30,31,43,58,59,60,63,64,67,68,77,78,],[41,41,41,41,41,41,41,41,41,89,90,41,41,]),'factor':([29,30,31,43,58,59,60,63,64,67,68,77,78,],[42,42,42,42,42,42,42,42,42,42,42,42,42,]),'plus_minus_factor':([29,30,31,43,58,59,60,63,64,67,68,77,78,],[44,44,44,44,44,44,44,44,44,44,44,44,44,]),'write_exp':([31,77,78,],[49,94,95,]),'expression_def':([40,],[57,]),'plus_minus':([41,],[62,]),'multiply_divide':([42,],[66,]),'var_cte':([44,],[71,]),'parameters':([55,],[82,]),'else':([92,],[99,]),'parameters2':([97,109,],[102,110,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM_ID ID SEMICOLON block','program',4,'p_expression_program','calcyacc.py',7),
  ('program -> PROGRAM_ID ID SEMICOLON vars functions block','program',6,'p_expression_program_vars','calcyacc.py',14),
  ('block -> OPEN_BRACKET block_statue CLOSE_BRACKET','block',3,'p_block','calcyacc.py',20),
  ('block_statue -> statue block_statue','block_statue',2,'p_block_statue','calcyacc.py',27),
  ('block_statue -> empty','block_statue',1,'p_block_statue','calcyacc.py',28),
  ('statue -> assign','statue',1,'p_statue','calcyacc.py',35),
  ('statue -> condition','statue',1,'p_statue','calcyacc.py',36),
  ('statue -> write','statue',1,'p_statue','calcyacc.py',37),
  ('vars -> VAR_ID varstype vars2','vars',3,'p_vars','calcyacc.py',44),
  ('vars2 -> varstype vars2','vars2',2,'p_vars','calcyacc.py',45),
  ('vars2 -> empty','vars2',1,'p_vars','calcyacc.py',46),
  ('varstype -> ID varstype2 COLON type SEMICOLON','varstype',5,'p_vars','calcyacc.py',47),
  ('varstype2 -> COMMA ID varstype2','varstype2',3,'p_vars','calcyacc.py',48),
  ('varstype2 -> empty','varstype2',1,'p_vars','calcyacc.py',49),
  ('functions -> FUNCTION_ID type ID OPEN_PARENTHESIS parameters CLOSE_PARENTHESIS block','functions',7,'p_functions','calcyacc.py',54),
  ('functions -> empty','functions',1,'p_functions','calcyacc.py',55),
  ('parameters -> type ID parameters2','parameters',3,'p_parameters','calcyacc.py',60),
  ('parameters -> empty','parameters',1,'p_parameters','calcyacc.py',61),
  ('parameters2 -> COMMA type ID parameters2','parameters2',4,'p_parameters','calcyacc.py',62),
  ('parameters2 -> empty','parameters2',1,'p_parameters','calcyacc.py',63),
  ('assign -> ID EQUAL expression SEMICOLON','assign',4,'p_assign','calcyacc.py',68),
  ('exp -> term plus_minus','exp',2,'p_exp','calcyacc.py',75),
  ('term -> factor multiply_divide','term',2,'p_term','calcyacc.py',81),
  ('factor -> OPEN_PARENTHESIS expression CLOSE_PARENTHESIS','factor',3,'p_factor','calcyacc.py',87),
  ('factor -> plus_minus_factor var_cte','factor',2,'p_factor','calcyacc.py',88),
  ('var_cte -> ID','var_cte',1,'p_var_cte','calcyacc.py',94),
  ('var_cte -> INT','var_cte',1,'p_var_cte','calcyacc.py',95),
  ('var_cte -> FLOAT','var_cte',1,'p_var_cte','calcyacc.py',96),
  ('plus_minus_factor -> PLUS','plus_minus_factor',1,'p_plus_minus_factor','calcyacc.py',102),
  ('plus_minus_factor -> MINUS','plus_minus_factor',1,'p_plus_minus_factor','calcyacc.py',103),
  ('plus_minus_factor -> empty','plus_minus_factor',1,'p_plus_minus_factor','calcyacc.py',104),
  ('multiply_divide -> MULTIPLY term','multiply_divide',2,'p_multiply_divide','calcyacc.py',110),
  ('multiply_divide -> DIVIDE term','multiply_divide',2,'p_multiply_divide','calcyacc.py',111),
  ('multiply_divide -> empty','multiply_divide',1,'p_multiply_divide','calcyacc.py',112),
  ('plus_minus -> PLUS exp','plus_minus',2,'p_plus_minus','calcyacc.py',118),
  ('plus_minus -> MINUS exp','plus_minus',2,'p_plus_minus','calcyacc.py',119),
  ('plus_minus -> empty','plus_minus',1,'p_plus_minus','calcyacc.py',120),
  ('condition -> IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block else SEMICOLON','condition',7,'p_condition','calcyacc.py',126),
  ('else -> ELSE block','else',2,'p_condition_else','calcyacc.py',132),
  ('else -> empty','else',1,'p_condition_else','calcyacc.py',133),
  ('expression -> exp expression_def','expression',2,'p_expression','calcyacc.py',139),
  ('expression_def -> GREATER_THAN exp','expression_def',2,'p_expression','calcyacc.py',140),
  ('expression_def -> LESS_THAN exp','expression_def',2,'p_expression','calcyacc.py',141),
  ('expression_def -> NOT_EQUAL exp','expression_def',2,'p_expression','calcyacc.py',142),
  ('expression_def -> empty','expression_def',1,'p_expression','calcyacc.py',143),
  ('write -> PRINT OPEN_PARENTHESIS write_exp CLOSE_PARENTHESIS SEMICOLON','write',5,'p_write','calcyacc.py',149),
  ('write_exp -> expression','write_exp',1,'p_write_exp','calcyacc.py',155),
  ('write_exp -> expression COMMA write_exp','write_exp',3,'p_write_exp','calcyacc.py',156),
  ('write_exp -> STRING','write_exp',1,'p_write_exp','calcyacc.py',157),
  ('write_exp -> STRING COMMA write_exp','write_exp',3,'p_write_exp','calcyacc.py',158),
  ('type -> INT_ID','type',1,'p_type','calcyacc.py',164),
  ('type -> FLOAT_ID','type',1,'p_type','calcyacc.py',165),
  ('empty -> <empty>','empty',0,'p_empty','calcyacc.py',171),
]
